<profile xmlns="http://ainq.com/ig-definition" id="SANER" chapter='1' base='http://hl7.org/fhir/uv/saner'
	codingsystems="SanerBedType" valuesets="BedLocationOperationalStatus BedProperty BedType">
	<domain id="PH">
		<org>HL7</org>
		<name>Situational Awareness for Novel Epidemic Response</name>
		<description></description>
		<overview file="SANER-overview.md" />
	</domain>
	<name>Situational Awareness for Novel Epidemic Response</name>
	<description>The Situational Awareness for Novel Epidemic Response Implementation Guide enables transmission
		of high level situational awareness information from inpatient facilities to centralized data repositories
		to support the treatment of novel influenza-like illness.</description>
	<!-- overview is optional -->
	<overview file="SANER-overview.md" />
	<!-- option is optional and repeatable -->
	<option id="CSV">
		<name>CSV Option</name>
		<description>An actor implementing the CSV Option supports the ability to exchange
			MeasureReport resources in CSV format using FHIR Operations</description>
		<participant actor='MeasureSource'>
			<description>
				A
				<ref actor='MeasureSource' />
				actor implementing the CSV option supports a FHIR Operation to provide data in CSV format.</description>
		</participant>
		<participant actor='MeasureConsumer'>
			<description>
				A
				<ref actor='MeasureConsumer' />
				actor implementing the CSV option supports a FHIR Operation to consume data in CSV format.</description>
		</participant>
	</option>
	<option id="Push">
		<name>Push Option</name>
		<description>An actor implementing the Push Option supports the periodic push of resources
			describing the current status of health delivery resources to a centralized collection point.</description>
		<overview />
		<participant actor='MeasureSource'>
			<description>
				A Measure Source implementing the Push Option periodically sends updates to a
				<ref actor='MeasureConsumer' />
				using the
				<ref tx='PUSH-TX' />
				transaction.</description>
		</participant>
		<participant actor='MeasureConsumer'>
			<description>
				An Measure Consumer implementing the Push Option periodically recieves updates from the
				<ref actor='MeasureSource' />
				using the
				<ref tx='PUSH-TX' />
				transaction.</description>
		</participant>
	</option>
	<option id="Pull">
		<name>Pull Option</name>
		<description>An actor implementing the Pull Option supports the periodic pull resources
			describing the current status of selected health delivery resources.</description>
		<overview />
		<participant actor='MeasureSource'>
			<description>
				A Measure Source implementing the Pull Option is periodically queried by an
				<ref actor='MeasureConsumer' />
				using the
				<ref tx='PULL-TX' />
				transaction to enable collection of the current status.</description>
		</participant>
		<participant actor='MeasureConsumer'>
			<description>
				An Measure Consumer implementing the Pull Option periodically queries a
				<ref actor='MeasureSource' />
				using the
				<ref tx='PULL-TX' />
				transaction to enable collection of the current status.</description>
		</participant>
	</option>
	<option id="SupplementalData">
        <name>Supplemental Data Option</name>
        <description>An actor implementing the Supplemental Data Option supports the use of Bundle in Push transactions
        used with the MeasureReport resource.  Actors implementing the Supplemental Data Option must also implement
        the Push Option.</description>
        <participant actor='MeasureSource'>
            <description>A MeasureSource implementing the Supplemental Data Option will send measures containing Supplemental Data using
            the HTTP Batch operation with a FHIR Collection bundle to the Bundle endpoint for the receiving
            Measure Consumer. The MeasureReport resource will be the first resource in this bundle, and all following resources
            in the Bundle will be the resources representing the supplemental data referenced by that MeasureReport.</description>
        </participant >
        <participant actor='MeasureConsumer'>
            <description>A MeasureConsumer implementing the Supplemental Data Option can receive measures containing
            supplemental data at its Bundle endpoint, and will store the resources following the requirements of
            the HTTP Batch operation.</description>
        </participant>
	</option>
	<option id="Questionnaire">
		<name>Questionnaire Option</name>
		<description>An actor implementing the Questionnaire Option supports the use of Questionnaire
			and QuestionnaireResponse resources to determine the current status of selected
			health delivery resources.</description>
		<overview />
		<participant actor='MeasureSource'>
			<description>A Measure Source implementing the Questionnaire Option will interact
				using Questionnaire and QuestionnaireResponse resources to report on the current status
				of health delivery resources.</description>
		</participant>
		<participant actor='MeasureConsumer'>
			<description>A Measure Consumer implementing the Questionnaire Option will interact
				using Questionnaire and QuestionnaireResponse resources to access the current status
				of health delivery resources.</description>
		</participant>
	</option>
	<option id="Aggregate">
		<name>Aggregate Option</name>
		<description>An actor implementing the Aggregate option enables aggregation of multiple MeasureReport resources into a
			consolidated
			MeasureReport.</description>
		<overview>This option enables multiple reports to be aggregated:
			* From multiple systems reporting partial results within a facility into a singular consolidated report.
			* From multiple reports over a period of time from a given location, e.g., to aggregate daily measure reports into a weekly
			report.
			* From multiple subjects within a geographic region into a MeasureReport describing that region.</overview>
	</option>
	<!-- standard is repeatable -->
	<standard id="FHIR-R4">
		<name>HL7 FHIR Release 4.0</name>
		<url>http://www.hl7.org/FHIR/R4</url>
	</standard>
	<standard id="RFC-7230">
		<url>https://ietf.org/rfc/rfc7230.html</url>
		<name>Hypertext Transfer Protocol - HTTP/1.1</name>
	</standard>
	<standard id="RFC-7540">
		<url>https://ietf.org/rfc/rfc7540.html</url>
		<name>Hypertext Transfer Protocol - HTTP/2</name>
	</standard>
	<standard id="RFC-3986">
		<url>https://ietf.org/rfc/rfc3986.html</url>
		<name>Uniform Resource Identifier (URI): Generic Syntax</name>
	</standard>
	<standard id="RFC-4627">
		<url>https://ietf.org/rfc/rfc4627.html</url>
		<name>The application/json Media Type for JavaScript Object Notation (JSON)</name>
	</standard>
	<standard id="RFC-6585">
		<url>https://ietf.org/rfc/rfc6585.html</url>
		<name>Additional HTTP Status Codes</name>
	</standard>
	<standard id="NDJSON">
		<url>http://ndjson.org/</url>
		<name>Newline Delimited JSON</name>
	</standard>

	<!-- usecase is optional and repeatable -->
	<usecase id="GETBEDS" actors="MeasureSource MeasureConsumer" transactions="PULL-TX PUSH-TX" content="">
		<name>Collecting Hospital and Ventilator Measures</name>
		<description>This use case addresses the collection and exchange of data from several information systems in a Facility
			to a centralized reporting system that communicates to Public Health. The ICU/Central Monitoring System collects data
			for multiple data elements by examining messages recieved and data in its database, and then reports these to a Measure
			Collector
			within the hospital.</description>
		<overview file='SANER-getbeds.md' />
		<step id="GETVALUES" from="ICU/Central Monitoring System" to="ICU/Central Monitoring System" returns="now">
			<name>ICU/Central Monitoring System collects data</name>
			<description>The ICU/Central Monitoring System is triggered (by request or schedule) to generate
				a report on ICU beds and equipment, including ventilated patients in ED/Overflow w/ COVID-19,
				Total ICU Beds, Occupied ICU Beds, Total Ventilators, Ventilators in Use.</description>
			<overview>
	1. The system collects information about ventilators outside the ICU for which the associated patient
	was admitted for suspected or confirmed COVID-19. It can makes the determination of suspected/confirmed COVID-19 from
	the DG1 segment of the ADT message it recieved regarding the patient.
	2. The system counts the number of ICU beds that it has been configured to recognize and which are operational
	3. The system counts the number of ICU beds that are transmitting telemetry (patient monitoring) information.
	4. The system counts the number of ventilators that it has been configured to recognize and which are operational
	5. The system counts the number of ventilators that are transmitting telemetry data to it in the ICU.</overview>
			<step id="REPORTVALUES-1.5-2.4-7" from="ICU/Central Monitoring System" to="Measure Collector" returns="now">
				<name>ICU/Central Monitoring System Reports&#xA;on multiple data elements&#xA;(measure populations)</name>
				<description>Multiple collected values are aggregated into a report which is then transmitted to the Measure Collector.</description>
			</step>
		</step>

		<step id="GETHOSPITALBEDS" from="Bed Management System" to="Measure Collector" returns="now">
			<name>Bed Management System Reports&#xA;on multiple data elements&#xA;(measure populations)</name>
			<description>The Hospitals Bed Management System collects data for multiple data elements by
				examining messages recieved and data in its database, and then reports these to a Measure Collector
				within the hospital.</description>
			<overview>
				1. The Bed Management System examines master file data to count the total number of beds in the hospital,
				as well as those beds specifically identified as being for acute (inpatient) care. The Bed Management solution can be a
				component
				of the EHR, or as occurs in some hospital settings, a third party solution that integrates with the EHR (usually through ADT
				and master file
				messages).
				2. The bed management system counts the occupied beds (based on current state of each bed) as tracked through
				state changes communicated through ADT messages. The Bed Management solution might be used to support housekeeping, or to support
				an [electronic
				bedboard](https://it.johnshopkins.edu/services/applications/administrative/ebb.html) that might used by a hospital
				"[Bed Czar](http://www.ihi.org/resources/Pages/Changes/RealTimeDemandCapacityManagement.aspx)."</overview>
		</step>

		<step id="GETCOVID19DATA" from="EHR" to="Measure Collector" returns="now">
			<name>EHR System reports&#xA;on multiple data elements&#xA;(measure populations)</name>
			<description>The Hospital's EHR collects data for multiple data elements.</description>
			<overview>
				1. The EHR collects data on hospitalized patients w/ COVID-19.
				2. The EHR collects data on hospitalized patients diagnosed with COVID-19 14 days after admission.
				3. The EHR collects data on patient deaths due to COVID-19.</overview>
		</step>

		<step id="GETEDDATA" from="ED System" to="Measure Collector" returns="now">
			<name>The ED System reports&#xA;on patients in the ED and/or overflow area.</name>
		</step>

		<step id="BED-STEP1" from="Measure Collector" to="Measure Collector" returns="now">
			<name>Measure Collector aggregates reports for&#xA;transmission to a Public Health Agency</name>
			<description>Either periodically on some schedule configured for the hospital, or upon recieving a
				full set of data, the Measure Collector gathers a set of results from different systems
				that have communicated them, putting together a complete MeasureReport for later reporting to the Public Health Agency.</description>
		</step>
		<step id="BED-STEP3" from="Measure Collector" to="Public Health Agency" returns="now">
			<name>Transmit Aggregated MeasureReport Data</name>
			<description>In a "push" model, the Measure Collector sends the aggregated MeasureReport to a MeasureConsumer (e.g., a Public
				Health endpoint used for measure transmission).</description>
		</step>
		<step id="BED-STEP4" to="Measure Collector" from="Public Health Agency" returns="now">
			<name>A Public Health Agency queries the&#xA;hospitals Measure Collector&#xA;for the most recent reports.</name>
			<description>As an alternative to push, the Public Health Agency can also "pull" data by querying the Hospitals
				"Measure Collector" endpoint (in fact, a FHIR Server with some additional features supporting aggregation).</description>
			<return id="BED-STEP5" returns="now">
				<name>Transmit Aggregated MeasureReport Data</name>
				<description>The Measure Collector sends the aggregated MeasureReports to the requesting Public Health Agency.</description>
			</return>
		</step>
	</usecase>
	<usecase id="VIEWREPORTS" actors="MeasureConsumer MeasureIntermediary" transactions="REPORT-TX" content="">
		<name>Accessing Measure Reports</name>
		<description>A public health user queries a reporting system to report on a measure for a region.</description>
		<!-- overview is optional -->
		<overview>In this use case, we see the classic "dashboard" panel, where a public health user
			selects a region, and one or more measures (or functions of measures) to report on, and the data is presented
			to them in an easy to view format.</overview>
		<step id="Aggregating-STEP2" from="MeasureIntermediary" to="MeasureSource" returns="now">
			<name>Measure Consumer component of a Measure Intermediary gathers data from one or Measure Sources</name>
			<description>The Measure Intermediary, acting as a Measure Consumer gathers and aggregates data (possibly computing a
				function with other associated data) from one or more Measure Sources,
				and makes them available through a Measure Source interface it provides.</description>
			<overview>The specific ordering in which gathering and aggregation is performed is not further specified
				by this implementation guide. It is shown as occuring before the user initiates the query here, but could also occur
				after. However, for many cases, geospatial systems can likely do a better job if the aggregation is done ahead of time.
				The application of a function to the data can enable a measure such as # of cases to be combined with other data such as
				population for the area to report # of cases per 10K population, or similar functions to better present data
				in a way that allows it to be reported using comparable scales.</overview>
		</step>
		<step id="Reporting-STEP1" from="Public Health User" to="MeasureConsumer" returns="now">
			<name>User Initiates Search</name>
			<description>The Public Health User navigates to a web page where collected data is reported.</description>
			<overview>The user selects a geographic region and an issue of concern (e.g., beds, ventilators, PPE). The Measure Consumer
				collects the appropriate reports
				and displays the results.</overview>
			<return>
				<name>Display Results</name>
				<description>The Measure Consumer displays an overview of aggregated regional results to the
					user, and additional links which enable navigation to finer grained or alternative displays.</description>
				<overview>Data can be displayed as aggregated or fine-grained status information based
					on the current focus of the public health user. It may be shown as a map, a table, or a graph.</overview>
			</return>
		</step>
		<step id="Reporting-STEP2" from="Public Health User" to="MeasureConsumer" returns="now">
			<name>User refines Focus or Form of Display</name>
			<description>The Public Health User selects a new form of display (e.g., Map, table or graph) or refines their
				focus (e.g., wider or smaller region).</description>
			<return>
				<name>Display Refined Results</name>
				<description>The Measure Repository modifies the users focus and reporting format</description>
			</return>
		</step>
	</usecase>

	<usecase id="MEASUREDIST" actors="MeasureDefinitionConsumer MeasureDefinitionSource" transactions="PULL-MX"
		content="PublicHealthMeasure PublicHealthMeasureLibrary">
		<name>Distributing Measure Definitions</name>
		<description>A public health or emergency response agency distributes updated Measure definitions, a hospital or intermediary
			retrieves these definitions for reporting.</description>
		<overview>Measures created for tracking a public health emergency may be revised periodically to support changing needs. This
			use case supports the need
			to distribute updated measure definitions to organizations who report on these measures.</overview>
		<step id="Search for updated Measures" from="MeasureDefinitionConsumer" to="MeasureDefinitionSource" returns="now">
			<name>Query for New or Updated Measures</name>
			<description>An organization required to report queries for for updated from one or public health or emergency response
				agencies to identify reporting requirements.</description>
			<overview></overview>
			<return id="BED-STEP5" returns="now">
				<name>Return matching measure specifications</name>
				<description>The agency sends the new or updated definitions to the requesting reporting organization.</description>
			</return>
		</step>
	</usecase>

	<usecase id="AUTOMATION" actors="MeasureDefinitionConsumer DataSource MeasureComputer MeasureSource"
		transactions="COMPUTE-MX" content="PublicHealthMeasureReport PublicHealthMeasure PublicHealthMeasureLibrary">
		<name>Automating Measure Computation</name>
		<description>A reporting organization (e.g., a hospital) automatically computes and reports measure data.</description>
		<overview>Automating measure reporting reduces the burden on users for manual data collection. When a measure has been
			automated, it
			can be computed using FHIR APIs from supporting information systems provided by the organization.</overview>
		<step id="Check for New or Updated Measures" from="MeasureDefinitionConsumer" to="MeasureDefinitionSource" returns="now">
			<name>Query for New or Updated Measures</name>
			<description>The reporting organization checks for new measures see [Distributing Measure
				Definitions](#distributing-measure-definitions) above.</description>
		</step>
		<step id="ComputeMeasures" from="MeasureComputer" to="MeasureComputer" returns="now">
			<name>Compute Measure</name>
			<description>The hospital information system collects data and computes the measures, returing a completed report.</description>
			<step id="GatherData" from="MeasureComputer" to="DataSource" returns="now">
				<name>Gather Data</name>
				<description>The hospital information system queries the local EHR or FHIR Server for applicable FHIR resources used in
					measure computation.</description>
				<return id="FHIRData" returns="now">
					<name>Returns Matching FHIR Resources</name>
					<description>The local EHR or FHIR Server returns the requested data and included resources.</description>
				</return>
			</step>
		</step>
		<step id="Send Measures" from="MeasureComputer" to="MeasureComputer" returns="now">
            <name>Send Measures to a Measure Consumer</name>
            <description>The reporting organization sends the computer measure to the public health agency.</description>
        </step>
	</usecase>

	<usecase id="SUPPLEMENTALDATA" actors="MeasureComputer MeasureSource MeasureConsumer DataSource"
		transactions="COMPUTE-MX" content="PublicHealthMeasureReport PublicHealthMeasure PublicHealthMeasureLibrary">
		<name>Reporting Supplemental Data</name>
		<description>A reporting organization (e.g., a hospital) collects and reports supplemental data with a measure report.</description>
		<overview>Supplemental data enables additional data analysis to be performed. The MeasureReport itself provides the capacity
			to detect
			a signal, e.g., increased strain on institutional resources, but does not by itself enable deeper analysis with regard to
			level or impact
			of this strain. Exchange of additional data elements allow deeper analysis, as might be used to support risk adjustment, or
			cause or impact analysis.

			Consider the case where patient comorbidities (e.g., Cardiovascular Disease, Smoking Status) are known to impact patient risk and
			associated complications, but
			where detailed analysis of these risk effects is unknown. Communication of supplemental data that include presence or absence of
			cardiovascuar disease, or the
			patient smoking status, and presence of absence of complications allows the recieving public health agencies to further analyze this
			data retrospectively.

			In the initial stages, this analysis can be used to assess strain, by comparing the impact of comorbidities on complications
			over time in facilities with
			otherwise similar measures of utilization. In later stages, this data can be used to further assess and refine strain created by
			disease burden based
			on associated complications.</overview>
		<step id="ComputeMeasures" from="MeasureComputer" to="MeasureComputer" returns="now">
			<name>Compute Measure</name>
			<description>The hospital information system collects data and computes the measures, returing a completed report.</description>
			<step id="GatherMeasureData" from="MeasureComputer" to="DataSource" returns="now">
				<name>Gather Measure Data</name>
				<description>The hospital information system queries the local EHR or FHIR Server for applicable FHIR resources used in
					measure computation.</description>
				<return id="FHIRMeasureData" returns="now">
					<name>Returns Matching FHIR Resources</name>
					<description>The local EHR or FHIR Server returns the requested data and included resources.</description>
				</return>
			</step>
			<step id="GatherSupplementalData" from="MeasureComputer" to="DataSource" returns="now">
				<name>Gather Supplemental Data</name>
				<description>The hospital information system queries the local EHR or FHIR Server for supplemental FHIR resources reported
					with the measure.</description>
				<return id="FHIRSupplementalData" returns="now">
					<name>Returns Supplemental FHIR Resources</name>
					<description>The local EHR or FHIR Server returns the supplemental data and included resources.</description>
				</return>
			</step>
		</step>
	</usecase>

	<!-- Other Use Cases can describe options -->
	<actor id="MeasureSource">
		<name>Measure Source</name>
		<description>The Measure Source Actor reports results Measures for a single facility, collection of facilities or aggregated
data for a region.</description>
		<!-- overview is optional -->
		<overview>In a single facility, or organization, the Measure Source Actor will compile data directly from the facility
or organization source systems.

A Measure Source may also exist in an Aggregator, Intermediary or Bridging role. In this guide we will use the term Intermediary
to describe these roles.

A Measure Source provides the FHIR data that is used by a Measure Consumer.</overview>
		<supports-tx transaction="PULL-TX" as="server" required-with-options="Pull">
			<role>Reports on selected data in response to a query.</role>
		</supports-tx>
		<supports-tx transaction="PUSH-TX" as="client" required-with-options="Push SupplementalData">
			<role>Periodically generates data for a Measure Consumer.</role>
		</supports-tx>
		<!-- requirement is optional and can repeat -->
		<requires id="SOURCE-R1" at-least-one="Pull Push">
			<description>The Measure Source **shall** implement either the Pull Option or the Push Option.</description>
		</requires>
		<requires id="SOURCE-Capability" implementing="Pull">
			<description>A Measure Source that implements the Pull Option **shall** provide a CapabilityStatement when queried via
[base]/metadata.</description>
		</requires>
		<requires id="SOURCE-SupplementalData" implementing="SupplementalData">
            <description>A Measure Source that implements the Supplemental Data Option **shall** support creation of MeasureReport and Supplemental Data
            resources through the [HTTP Batch](https://www.hl7.org/fhir/http.html#transaction) operation and endpoint.</description>
		</requires>
		<requires id="SOURCE-SupplementalDataOption" implementing="SupplementalData">
           <description>A Measure Source that implements the Supplemental Data option must also implement the Push Option</description>
        </requires>
	</actor>

	<actor id="MeasureConsumer">
		<name>Measure Consumer</name>
		<description>The Measure Consumer provides access to aggregated or fine-grained
data gathered from one or more Measure Sources.</description>
		<overview>The Measure Consumer provides the ability to report on data from one or more Measure Sources.

In the case of a single facility or organization the Measure Consumer is reporting the data at aggregated
or varying levels of granularity using data extracted from a Measure Source.</overview>
		<requires-tx transaction="REPORT-TX" as="self">
			<role>Display or transmits reports using availability data</role>
		</requires-tx>
		<supports-tx transaction="PULL-TX" as="client" required-with-options="Pull">
			<role>Collects data for reporting</role>
		</supports-tx>
		<supports-tx transaction="PUSH-TX" as="server" required-with-options="Push SupplementalData">
			<role>Collects data for reporting</role>
		</supports-tx>
		<requires id="CONSUMER-R1" at-least-one="Pull Push">
			<description>The Measure Consumer **shall** implement either the Pull Option or the Push Option.</description>
		</requires>
		<requires id="CONSUMER-Capability" implementing="Push">
			<description>A Measure Consumer that implements the Push Option **shall** provide a CapabilityStatement when queried via
				[base]/metadata.</description>
		</requires>
		<requires id="CONSUMER-SupplementalData" implementing="SupplementalData">
            <description>A Measure Consumer that implements the Supplemental Data Option **shall** support creation of MeasureReport and Supplemental Data
            resources through the [HTTP Batch](https://www.hl7.org/fhir/http.html#transaction) operation and endpoint.</description>
        </requires>
        <requires id="CONSUMER-SupplementalDataOption" implementing="SupplementalData">
           <description>A Measure Consumer that implements the Supplemental Data option must also implement the Push Option</description>
        </requires>
	</actor>

	<actor id="MeasureIntermediary" groups="MeasureSource MeasureConsumer">
		<name>Measure Intermediary</name>
		<description>The Measure Intermediary is a grouping of a Measure Source with a Measure Consumer.</description>
		<overview>This actor represents the composition of a <ref actor='MeasureSource' /> with a <ref actor='MeasureSource' />.

The Measure Intermediary role can aggregate data from multiple Measure Sources. Data from Measure Sources may
be pulled in by the Intermediary, or pushed to the Intermediary by the Measure Source.

The Measure Intermediary may also provide the capabilities of a Measure Consumer to enable data to be
reported at an aggregated level.

The Measure Intermediary role may aggregate data from other Measure Intermediaries. Since the Intermediary
is exposing a Measure Source capability this method allows data to be aggregated in a hierarchy such as:

- Supporting multiple data inputs within a single facility to create a complete measure from multiple partial reports,
- Enabling aggregation of data for Groups of hospitals in a health system, a hospital service area, or referral region,
- Aggregating to county or state levels for local and regional Public Health agencies
- Communicating aggregated data to National / Federal Agencies such as CDC or FEMA.


#### Bridging between Incompatible Options
In networking parlance, a Bridge is a system that connects between different protocols. The different options in this
Implementation Guide
can create incompatibilities, but these can be bridged by an Intermediary.

For example, a Measure Intermediary that implements the Push Option in the Measure Consumer, that groups with a Measure Source
implementing the Push Option can bridge between a Measure Source implementing the Pull option to enable
communication with a Measure Consumer implementing the Pull option.

In this example, the Bridge is simply a FHIR Server. A FHIR Server that supports CRUD operations on MeasureReport and Measure
effectively implements both the Measure Consumer with the Push Option
and the Measure Source actor implementing the Pull Option.

![FHIR Server](FHIRServer.svg)</overview>
		<supports-tx transaction="PULL-TX" as="client" required-with-options="Pull">
			<role>Collects data for reporting</role>
		</supports-tx>
		<supports-tx transaction="PUSH-TX" as="server" required-with-options="Push">
			<role>Collects data for reporting</role>
		</supports-tx>
		<supports-tx transaction="PULL-TX" as="server" required-with-options="Pull">
			<role>Reports on selected data in response to a query.</role>
		</supports-tx>
		<supports-tx transaction="PUSH-TX" as="client" required-with-options="Push">
			<role>Periodically generates data for a Measure Consumer.</role>
		</supports-tx>
		<requires id="CONSUMER-Capability" implementing="Push">
			<description>A Measure Intermediary whose Consumer implements the Push Option **shall** provide a CapabilityStatement when
				queried via [base]/metadata.</description>
		</requires>
		<requires id="SOURCE-Capability" implementing="Pull">
			<description>A Measure Intermediary whose Source implements the Pull Option **shall** provide a CapabilityStatement when
				queried via [base]/metadata.</description>
		</requires>
	</actor>
	<actor id="MeasureDefinitionSource">
		<name>Measure Definition Source</name>
		<description>The Measure Definition Source Actor provides access to Measures defined by public health and emergency response
			authorities.</description>
		<!-- overview is optional -->
		<overview>The Measure Definition Source actor is responsible for maintaining measures for systems that are using this
			implementation guide to automate measure reporting.</overview>
		<requires-tx transaction="PULL-MX" as="server">
			<role>Reports on available measures in response to a query.</role>
		</requires-tx>
		<!-- requirement is optional and can repeat -->
		<requires id="DEFINITION-Capability" implementing="Pull">
			<description>A Measure Definition Source **shall** provide a CapabilityStatement when queried via [base]/metadata.</description>
		</requires>
	</actor>
	<actor id="MeasureDefinitionConsumer">
		<name>Measure Definition Consumer</name>
		<description>The Measure Definition Consumer Actor accesses Measures defined by public health and emergency response
			authorities.</description>
		<!-- overview is optional -->
		<overview>The Measure Definition Consumer actor is responsible for retrieving measures from publishing systems to automate
			measure reporting.</overview>
		<requires-tx transaction="PULL-MX" as="client">
			<role>Queries for available measures and components.</role>
		</requires-tx>
	</actor>
	<actor id="MeasureComputer" groups="MeasureSource MeasureDefinitionConsumer">
		<name>Measure Computer</name>
		<description>The Measure Computer Actor is responsible for computing measures from definitions provided through its grouping
			with a Measure Definition Consumer actor,
			and reporting these measures through its grouping with the Measure Source actor.</description>
		<requires-tx transaction="PULL-MX" as="server">
			<role>Queries for available measures.</role>
		</requires-tx>
		<requires-tx transaction="COMPUTE-MX" as="server">
			<role>Pull data for, computes and reports a measure.</role>
		</requires-tx>
		<supports-tx transaction="PULL-TX" as="server" required-with-options="Pull">
			<role>Reports on selected measure reports in response to a query from a Measure Consumer.</role>
		</supports-tx>
		<supports-tx transaction="PUSH-TX" as="client" required-with-options="Push">
			<role>Periodically sends measure reports to a Measure Consumer.</role>
		</supports-tx>
		<!-- requirement is optional and can repeat -->
		<requires id="COMPUTER-R1" at-least-one="Pull Push">
			<description>The Measure Computer **shall** implement either the Pull Option or the Push Option.</description>
		</requires>
		<requires id="COMPUTER-Capability" implementing="Pull">
			<description>A Measure Computer that implements the Pull Option **shall** provide a CapabilityStatement when queried via
				[base]/metadata.</description>
		</requires>
	</actor>
	<actor id="DataSource">
		<name>Data Source</name>
		<description>The Data Source actor is responsible for supplying data to a MeasureComputer.</description>
		<overview>The Data Source supplies data via FHIR Queries supported by national standards.</overview>
		<requires-tx transaction="COMPUTE-MX" as="server">
			<role>Responds to queries for data used to compute measures or collect supplemental data.</role>
		</requires-tx>
		<requires id="DATASOURCE-Capability" implementing="Pull">
			<description>A Data Source **shall** provide a CapabilityStatement when queried via [base]/metadata.</description>
		</requires>
	</actor>
	<transaction id="PULL-TX" standards="FHIR-R4 RFC-7230">
		<name>Query Measure</name>
		<description>The Query Measure transaction allows a Measure Consumer to
			periodically query about the availability of a resource from an Measure Source.</description>
		<overview>This transaction enables a MeasureConsumer actor to access Measure, MeasureReport, Location and Organization
			resources from a MeasureSource actor. It defines the query parameters that the actors must and **should** support for search,
			and the read operations that must be supported.</overview>
		<!-- like steps, messages can nest to support activation lines -->
		<message from="MeasureConsumer" to="MeasureSource">
			<name>Search Request</name>
			<description></description>
			<trigger id="TRIGGER1">
				<name>Reporting Period Elapsed</name>
				<description>The current reporting period has elapsed.</description>
				<overview>See the [Reporting Period](StructureDefinition-ReportingPeriod.html) extension</overview>
			</trigger>
			<semantics>
				<description>The Measure Consumer sends a query
					using an HTTP GET or POST transaction to the Measure Source requesting information on
					available resources.</description>
				<interaction protocol='fhir' options='Pull'>
					<!-- Common parameter requirements -->
					<!-- Servers must support standard values for format, clients may use Accept header or _format -->
					<group>
						<name>Server Business Rules</name>
						<description>A server may implement business rules that restrict
							the combinations of parmeters that may be used in a search in order to ensure appropriate
							performance. For example, when searching for a MeasureReport, a server may require the
							presence of the measure or _id parameters, and may require other parameters to restrict
							the size of the query. For example, it may require the use of a location parameter, or
							a date range for the measure period, in order to limit the results that may be returned.

							A client can expect that a server will return results on a query for a MeasureReport
							given a measure and a date range.</description>
					</group>
					<group>
						<name>Formats</name>
						<description>All servers must support the _format parameter for any read or search and the standard values
							defined by FHIR for JSON and XML output. This value must override the Accept: header when present in an exchange.
							Servers must also support the Accept: header, and **shall** support any value in Accept: that can be given to _format
							for consistency. Servers are also free to support other output formats (e.g. turtle as defined in the base FHIR
							specifications, or other formats such as CSV which might be easier for clients to present or use). Servers
							should support other commonly used expressions representing JSON or XML outputs without complaint, including
							those specified in prior releases (e.g., the DSTU2 application/xml+fhir or application/json+fhir types that
							have since changed in R4).</description>
						<parameter name='_format' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shall' />
						<!-- Servers **should** support all values for format, clients may use Accept header or _format -->
						<parameter name='_format' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should'
							client='should-not' />
						<parameter name='Accept:' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shall' />
						<parameter name='Accept:' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should'
							client='should-not' />
					</group>
					<group>
						<description>The server must support the _count parameter for queries. Servers **should** use a default
							value for _count if no value is provided to avoid server overloading. This guide recommends a default value of 100 based on
							existing implementation experience.</description>
						<parameter name='_count' min='0' max='1' expect='shall' />
					</group>
					<group>
						<name>Include Support</name>
						<description>To reduce transaction overhead, a client system may wish to retrieve all the resources referenced by the
							selected resource when obtaining it. This can be accomplished by using a search with an _id parameter, combined with
							_include=*.</description>
						<overview>This guide does not further specify specify resource includes beyond required support for *.
							Systems that support _include gernally handle _include=*, in fact, in some ways it is easier to implement
							than more selective _include operations. Recursive includes can be a source of server loading issues, as
							an incorrectly implemented include with recursive includes could wind up retrieving far more data than
							the client expected. Thus, these are not recommended.</overview>
						<parameter name='_include' min='0' max='1' values='*' type='string' expect='shall' />
						<parameter name='_include:iterate' type='string' expect='should-not' />
					</group>

					<!-- Operation describes the specific operation for the protocol For HTTP, this might be GET, PUT, POST, et cetera. For FHIR,
						these are the defined FHIR operations, or a specific operation definition. Each operation describes one possible interaction. -->
					<operation name='read' resources='Location MeasureReport Measure Organization' expect='shall'>
						<name>Read on Required Resources</name>
						<description>A client must be able to read individual resources that are returned or referenced within resources
							returned by a query. Since MeasureReport references at the very least, Measure, Organization, and Location
							these must all be able to be read.</description>
					</operation>
					<operation options='CSV' name='$read-csv' invoke='instance' resources="MeasureReport" expect="shall" client='may'>
						<name>Read in CSV Format</name>
						<description>Read a given MeasureReport using the CSV Format. See [CSV Conversion](CSV_Conversion.html) for details.</description>
						<group>
							<name>Convert Instance</name>
							<parameter name='map' use='in' type='composite' min="0" max="*" />
							<parameter name='return' use='out' type='Binary' min="1" max="1" />
						</group>
					</operation>
					<operation options='CSV' name='$search-csv' invoke='type' resources="MeasureReport" expect="shall" client='shall'>
						<name>Search in CSV Format</name>
						<description>Search Measure Report resources using the CSV Format. See [CSV Conversion](CSV_Conversion.html) for details.</description>
						<group>
							<name>Search Instances</name>
							<parameter name='_lastUpdated' use='in' comp='eq lt gt ge le' type='date' min='0' max='2' expect='shall' />
							<parameter name='date' use='in' comp='eq lt gt ge le' min='0' max='2' type='date' expect='shall' />
							<parameter name='period' use='in' comp='eq lt gt ge le' min='1' max='2' type='date' expect='shall' />
							<parameter name='measure' min='1' use='in' max='*' type='uri' expect='shall' />
							<parameter name='measure.title' use='in' min='0' max='*' type='string' expect='should' />
							<parameter name='subject' use='in' min='0' max='*' type='reference' expect='shall' />
							<parameter name='subject:identifier' use='in' min='0' max='*' type='token' expect='shall' />
							<parameter name='subject:Location.near' use='in' min='0' max='1' type='special' expect='should' />
							<parameter name='reporter' use='in' min='0' max='*' type='reference' expect='shall' />
							<parameter name='reporter:identifier' use='in' min='0' max='*' type='token' expect='shall' />
							<parameter name='map' use='in' type='composite' min="0" max="*" />
							<parameter name='return' use='out' type='Binary' min="1" max="1" />
						</group>
					</operation>
					<operation name='search' resources='Location MeasureReport Measure Organization' expect='shall'>
						<name>Search by _id on Required Resources</name>
						<group>
							<name>Search by _id</name>
							<description>A client must be able to read individual resources that are returned or referenced within resources
								returned by a query. Client systems may save resource references for future use, retrieving them later as
								needed. To reduce overhead, a client system may also wish to retrieve the resources referenced by the
								selected resource. This can be accomplished by using a search with an _id parameter, combined with _include=*</description>
							<parameter name='_id' min='1' max='*' type='token' expect='shall' />
						</group>
					</operation>
					<operation name='search' resources='Location Organization' expect='shall'>
						<name>Search by name or identifier on Referenced Resources</name>
						<group>
							<name>Search by name or identifier</name>
							<description>A client must be able to read resources that are referenced within resources
								returned by a query by name or identifier.</description>
							<parameter name='name' min='0' max='*' type='string' expect='shall' />
							<parameter name='identifier' min='0' max='*' type='token' expect='shall' />
						</group>
					</operation>
					<operation id='search-for-measure-definition' name='search' resources='Measure' expect='shall'>
						<name>Search on Definition Resources</name>
						<description>A client system must be able to retrieve the data they need, be it about beds,
							ventilators, PPE, or other measure.</description>
						<overview>Measures can be identified by codes used in the measure,
							or by the measure title, its canonical URL, or by something easier for a user to recall, such
							as the text of the measure or a code within it. Multiple measures may report on the same kind of thing (e.g., beds),
							so retrieval by code, or by code within a value set **should** be supported. There may be
							multiple measures which identify the kind of thing that the client system is interested in
							learning more about. Search by code **should** be met by implementing the &lt;a
							href='SearchParameter-SearchParameter-code.html'>SearchParameter-code&lt;/a>
							search parameter.

							However, search by code is not supported by default by many off-the-shelf systems,
							and so this is not a strict requirement for implementers. Also, chained searching
							is also not always readily available, and so search by measure title is also not a hard requirement.
							At the very least, a server must be able to search by measure, and a client must also to ensure
							the greatest interoperability between systems with differing capabilities.</overview>

						<group>
							<name>Search by Text or Code</name>
							<description>A client system **should** be able to search for Measure or other definition resources
								associated with by text within the definition. This requirement can be met through support of the
								&lt;a href='http://hl7.org/fhir/search.html#text'>_text or _content search parameters&lt;/a>, or by implementation
								of the &lt;a href='SearchParameter-SearchParameter-definition-text.html'>definition-text SearchParameter&lt;/a>.</description>
							<parameter name='_text' min='0' max='*' type='string' expect='should' />
							<parameter name='_content' min='0' max='*' type='string' expect='should' />
							<parameter name='definition-text' min='0' type='string' max='*' expect='should' />
							<parameter name='code' min='0' max='*' type='token' expect='should' />
							<parameter name='code:in' min='0' max='*' type='token' expect='should' />
						</group>
					</operation>
					<operation name='read' resources='Questionnaire QuestionnaireResponse' expect='shall' options='Questionnaire'>
						<name>Read on Questionnaire and QuestionnaireResponse Resources</name>
						<description>Questionnaire and QuestionnaireResponse are being considered because some data is being requested
							via forms that better fit a QuestionnaireResponse approach (e.g., free form answers).</description>
					</operation>
					<operation name='search' resources="Questionnaire QuestionnaireResponse" expect='shall' options='Questionnaire'>
						<name>Search by _id</name>
						<description>A client must be able to read individual resources returned in a query</description>
						<overview>We are still experimenting with QuestionnaireResponse, but expect to adopt it.</overview>
						<group>
							<name>Search by _id</name>
							<parameter name='_id' min='1' max='*' type='token' expect='shall' />
						</group>
						<group>
							<name>Search by Text or Code</name>
							<description>A client system **should** be able to search for Questionnaire or other definition resources
								associated with by text within the definition. This requirement can be met through support of the
								&lt;a href='http://hl7.org/fhir/search.html#text'>_text or _content search parameters&lt;/a>, or by implementation
								of the &lt;a href='SearchParameter-SearchParameter-definition-text.html'>definition-text SearchParameter&lt;/a>.</description>
							<parameter name='_text' min='0' max='*' type='string' expect='should' />
							<parameter name='_content' min='0' max='*' type='string' expect='should' />
							<parameter name='definition-text' min='0' type='string' max='*' expect='should' />
							<parameter name='code' min='0' max='*' type='token' expect='should' />
							<parameter name='code:in' min='0' max='*' type='token' expect='should' />
						</group>
					</operation>
					<operation name='search' resources='QuestionnaireResponse' expect='shall' client='shall' options="Questionnaire">
						<name>Search by Date and Questionnaire</name>
						<description>A client must be able to search for responses by Questionnaire for relevant dates,
							e.g., the date of _lastUpdate of a previously retrieved resource to see if it has changed (e.g., in cases
							where data needs to be refreshed), the date it was reported, or the period it applies to.

							In order to enable queries within a geographic region, search must allow for a client to at least enumerate locations
							by a well defined identifier (e.g., an NPI, a HIFLD location identifier, or some other readily and publicly available
							facility identifier.) This enables systems to use publicly available data to identify facilities within a
							particular region.

							Further geographic search can be enabled by chaining to location, and using the near search operation location,
							which allows search to be performed based on geographic coordinates and a distance measure to specify a search
							within a region. This enables systems without extensive geographic capabilities to come close in identifying a
							facility within a particular distance (some implementations e.g., HAPI, use a bounding box, rather than a circle,
							because it increases search efficiency).</description>
						<overview>All date searches
							must allow a range to be specified, but need not allow more than one range. Approximate ranges are not required
							to be supported because server support for these is not commonly available, nor implemented in readily reproducable
							fashions (the definition of an approximate date can have different meanings for different servers). Simple eq, le, lt,
							ge,
							and gt **should** be sufficient to specify date ranges.</overview>
						<group>
							<parameter name='_lastUpdated' comp='eq lt gt ge le' type='date' min='0' max='2' expect='shall' />
							<parameter name='authored' comp='eq lt gt ge le' min='0' max='2' type='date' expect='shall' />
							<parameter name='questionnaire' min='1' max='*' type='uri' expect='shall' />
							<parameter name='questionnaire.title' min='0' max='*' type='string' expect='should' />
							<parameter name='subject' min='0' max='*' type='reference' expect='shall' />
							<parameter name='subject:identifier' min='0' max='*' type='token' expect='shall' />
							<parameter name='subject:Location.near' min='0' max='1' type='special' expect='should' />
							<parameter name='author' min='0' max='*' type='reference' expect='shall' />
							<parameter name='author:identifier' min='0' max='*' type='token' expect='shall' />
						</group>
					</operation>
					<operation name='search' resources='MeasureReport' expect='shall' client='shall'>
						<name>Search on Required Resources</name>
						<!-- Parameter describes each parameter that must be supported in the interaction To require support for multiple parameters,
							list each that can be used name - name of the parameter type - type of the parameter (specified by protocol, e.g. header, query parameter,
							post body parameter for http) can be omitted if the value can be understood in the protocol comp - comparators supported min - The
							minimum number of values this parameter must have when requested by a client (0 = optional in an interaction) max - The maximum number
							of values this parameter the must be supported by a server (0 = not permitted, * = no limit) expect - shall|should|should-not -->

						<group>
							<name>Search by Date and Measure</name>
							<description>A client must be able to search by Measure for relevant dates,
e.g., the date of _lastUpdate of a previously retrieved resource to see if it has changed (e.g., in cases
where data needs to be refreshed), the date it was reported, or the period it applies to.

In order to enable querys within a geographic region, search must allow for a client to at least enumerate locations
by a well defined identifier (e.g., an NPI, a HIFLD location identifier, or some other readily and publicly available
facility identifier.) This enables systems to use publicly available data to identify facilities within a
particular region.

Further geographic search can be enabled by chaining to location, and using the near search operation location,
which allows search to be performed based on geographic coordinates and a distance measure to specify a search
within a region. This enables systems without extensive geographic capabilities to come close in identifying a
facility within a particular distance (some implementations e.g., HAPI, use a bounding box, rather than a circle,
because it increases search efficiency).</description>
							<overview>All date searches must allow a range to be specified, but need not allow more than one range. Approximate ranges are not required
to be supported because server support for these is not commonly available, nor implemented in readily reproducable
fashions (the definition of an approximate date can have different meanings for different servers). Simple eq, le, lt,
ge, and gt **should** be sufficient to specify date ranges.</overview>
							<parameter name='_lastUpdated' comp='eq lt gt ge le' type='date' min='0' max='2' expect='shall' />
							<parameter name='date' comp='eq lt gt ge le' min='0' max='2' type='date' expect='shall' />
							<parameter name='period' comp='eq lt gt ge le' min='1' max='2' type='date' expect='shall' />
							<parameter name='measure' min='1' max='*' type='uri' expect='shall' />
							<parameter name='measure.title' min='0' max='*' type='string' expect='should' />
							<parameter name='subject' min='0' max='*' type='reference' expect='shall' />
							<parameter name='subject:identifier' min='0' max='*' type='token' expect='shall' />
							<parameter name='subject:Location.near' min='0' max='1' type='special' expect='should' />
							<parameter name='reporter' min='0' max='*' type='reference' expect='shall' />
							<parameter name='reporter:identifier' min='0' max='*' type='token' expect='shall' />
						</group>
					</operation>
				</interaction>
			</semantics>
			<action by="MeasureConsumer">
				<name>Search for MeasureReport</name>
				<description>Measure Consumer requests data from a Measure Source.</description>
				<overview>The Measure Consumer performs a FHIR Search operation
					to retrieve the selected resources.</overview>
			</action>
			<result>
				<name>Search Response</name>
				<description>The Measure Source returns the requested results results.</description>
				<trigger id="TRIGGER-1a">
					<name>Resources have been requested by a Measure Consumer.</name>
				</trigger>
				<semantics>
					<description>The Measure Source responds with requested resources.</description>
					<overview>The resources will conform to the profiles for the MeasureReport, Location or Organization described elsewhere in this Implementation Guide</overview>
					<interaction protocol='fhir'>
						<description>The Measure Source will return the selected resources and an appropriate success response
in a FHIR resource following the protocol for the read or search operation requested.</description>
						<content profiles='PublicHealthMeasure PublicHealthMeasureReport' expect='shall' />
					</interaction>
				</semantics>
				<action by="MeasureSource">
					<name>Returns Matching Resources</name>
					<description>The Measure Source returns the requested resource.</description>
				</action>
			</result>
		</message>
	</transaction>

	<transaction id="PUSH-TX" standards="FHIR-R4 RFC-7230 NDJSON">
		<name>Produce Measure</name>
		<description>The Produce Measure transaction allows an Measure Source to periodically report on availability of resources to a Measure Consumer.</description>
		<overview>This transaction defines the create and update operations that a MeasureConsumer and MeasureSource actor must support.</overview>
		<message from="MeasureSource" to="MeasureConsumer">
			<name>Push Measure</name>
			<description></description>
			<trigger id="TRIGGER2">
				<name>Reporting Period Elapsed</name>
				<description>The current reporting period has elapsed, or the operation is triggered by automation (e.g. for manual testing,
diagnostics or error recovery).</description>
				<overview>See the [Reporting Period](StructureDefinition-ReportingPeriod.html) extension.</overview>
			</trigger>
			<semantics>
				<description>A MeasureReport is created or updated by the MeasureSource on the MeasureConsumer.</description>
				<overview>The MeasureReport sends a MeasureReport to the MeasureConsumer using the FHIR
[create](https://www.hl7.org/fhir/http.html#create) or [update](https://www.hl7.org/fhir/http.html#update) interactions.
A MeasureSource supporting the CSV option sends the CSV file to the MeasureConsumer using the $report-csv operation.</overview>
				<interaction protocol='fhir' options='Push'>
					<!-- what about xml+fhir and json+fhir variants? -->
					<operation name='create' resources='MeasureReport' expect='shall'>
						<parameter name='_format' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shall' />
						<parameter name='_format' min='0' max='1'
							values='xml json text/xml application/json application/xml application xml+fhir application/json+fhir' expect='should' />
						<parameter name='Content-Type:' min='0' max='1' values='application/fhir+xml application/fhir+json'
							expect='shal1' />
						<parameter name='Content-Type:' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should' />
					</operation>
					<operation name='update' resources='MeasureReport' expect='shall'>
						<parameter name='_format' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shal1' />
						<parameter name='_format' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should' />
						<parameter name='Content-Type:' min='0' max='1' values='application/fhir+xml application/fhir+json'
							expect='shal1' />
						<parameter name='Content-Type:' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should' />
					</operation>
					<operation options='CSV' name='$report-csv' invoke='instance' resources="Measure" expect="shall" client='shall'>
						<name>Create or update a MeasureReport from CSV Format</name>
						<description>Create or update a MeasureReport from the CSV Format. If a report already exists for the subject and reporter
for the given time period, it is updated. Otherwise, a new report is created. See [CSV Conversion](CSV_Conversion.html) for details.</description>
						<group>
							<name>Create or Update a MeasureReport Instance</name>
							<parameter name='input' use='in' type='Binary' min="1" max="1">
								<description>The input of the request is a CSV file with labeled columns containing the data in the report.</description>
							</parameter>
							<parameter name='map' use='in' type='composite' min="0" max="*">
								<description>Each parameter is a composite of column to measure mappings</description>
							</parameter>
							<parameter name='period-start' use='in' type='date' min="1" max="1">
								<description>The start of the reporting period.</description>
							</parameter>
							<parameter name='period-end' use='in' type='date' min="1" max="1">
								<description>The end of the reporting period.</description>
							</parameter>
							<parameter name='reporter' use='in' type='reference' min="0" max="1">
								<description>A reference or identifier of the reporter for the MeasureReport. If unspecified, the server may determine the reporter based on business rules (e.g., based on the identity of the sender). </description>
							</parameter>
							<parameter name='subject' use='in' type='reference' min="0" max="1">
								<description>A reference or identifier of the subject for the MeasureReport. If unspecified,
the server may determine the subject based on business rules (e.g., based on the identity of the sender).</description>
							</parameter>
							<parameter name='return' use='out' type='Bundle' content='PublicHealthMeasureReport' min="0" max="1">
								<description>The result of the reporting operation</description>
							</parameter>
						</group>
					</operation>
				</interaction>
				<interaction protocol='fhir' options='SupplementalData'>
                    <!-- what about xml+fhir and json+fhir variants? -->
                    <operation name='batch' resources='Bundle' expect='shall'>
                        <name>Create or update a MeasureReport with supplemental data</name>
                        <description>Communicate a MeasureReport with supplemental data in a Bundle using the [FHIR batch](https://www.hl7.org/fhir/http.html#transaction) operation. The MeasureReport
                        shall be the first entry in the Bundle. Referenced MeasureReport.evaluatedResource elements shall appear as subsequent entries in the Bundle.</description>
                        <parameter name='_format' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shall' />
                        <parameter name='_format' min='0' max='1'
                            values='xml json text/xml application/json application/xml application xml+fhir application/json+fhir' expect='should' />
                        <parameter name='Content-Type:' min='0' max='1' values='application/fhir+xml application/fhir+json'
                            expect='shal1' />
                        <parameter name='Content-Type:' min='0' max='1'
                            values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should' />
                    </operation>
                </interaction>
			</semantics>
			<action by="MeasureSource">
				<name>Send MeasureReport Resource</name>
				<description>The Measure Source creates resources and sends them to a Measure Consumer</description>
				<overview>The Measure Source performs the FHIR create
					operation on the MeasureReport resource at a Measure Consumer.</overview>
			</action>
			<action by="MeasureIntermediary">
				<name>Aggregate MeasureReport Resources</name>
				<operation options='Aggregate' name='$aggregate' invoke='instance' resources="MeasureReport" expect="shall"
					client='shall'>
					<name>Aggregate</name>
					<description>Aggregate two or more more Messure Report resources into a single MeasureReport.</description>
					<overview>This operation enables a Measure Intermediary to create a measure report that aggregates data from multiple
measure reports. The MeasureReport to be aggregated can be provided in the measure-report parameter, or the caller can indicate which measures
**should** be aggregated by specifying the search criteria which the Intermediary will use to select the MeasureReport resources to aggregate. In
all cases, the MeasureReport resources being aggregated must reference the same Measure resource defining the MeasureReport to generate.</overview>
					<group>
						<name>Aggregate one or more MeasureReport reesources into a single MeasureReport resource</name>
						<parameter name='measure-report' use='in' type='MeasureReport' min="0" max="*">
							<description>The MeasureReport resources to aggregate.</description>
						</parameter>
						<parameter name='_id' use='in' type='string' min='0' max='*' expect='shall' client='should' />
						<parameter name='period' use='in' comp='eq lt gt ge le' min='1' max='2' type='date' expect='shall'
							client='should' />
						<parameter name='measure' use='in' min='1' max='1' type='uri' expect='shall' client='should' />
						<parameter name='measure.title' use='in' min='0' max='1' type='string' expect='should' />
						<parameter name='subject' use='in' min='0' max='*' type='reference' expect='shall' client='should' />
						<parameter name='subject:identifier' use='in' min='0' max='*' type='token' expect='shall' client='should' />
						<parameter name='reporter' use='in' min='0' max='*' type='reference' expect='shall' client='should' />
						<parameter name='reporter:identifier' use='in' min='0' max='*' type='token' expect='shall' client='should' />
						<parameter name='result-reporter' use='in' type='reference' min="0" max="1" expect='shall'>
							<description>A reference or identifier of the reporter for the MeasureReport. May be omitted if all MeasureReport
resources being aggregated have a common reporter. A server may determine the reporter based on business rules (e.g., based on the
identity of the sender of the request).</description>
						</parameter>
						<parameter name='result-subject' use='in' type='reference' min="0" max="1" expect='shall'>
							<description>A reference or identifier of the subject for the MeasureReport. May be omitted if all MeasureReport
resources being aggregated have a common subject.</description>
						</parameter>
						<parameter name='return' use='out' type='MeasureReport' content='PublicHealthMeasureReport' min="0" max="1"
							expect='shall'>
							<description>The result of the aggregation operation.</description>
						</parameter>
					</group>
				</operation>
			</action>
			<action by="MeasureConsumer">
				<name>Accept Resource</name>
				<description>The Measure Consumer reports success using 200 OK, 201 Created, or 204 No Content to indicate a successful update.</description>
				<overview />
			</action>
		</message>
	</transaction>

	<transaction id="PULL-MX" standards="FHIR-R4 RFC-7230 NDJSON">
		<name>Query Measure Definition</name>
		<description>The Query Measure Definition transaction allows a Measure Definition Consumer to periodically query about the availability of a resource from an Measure Definition Source.</description>
		<overview>This transaction enables a MeasureDefinition Consumer actor to access Measure resources from a MeasureDefinitionSource actor.
It defines the query parameters that the actors must and **should** support for search and read operations that must be supported.</overview>
		<!-- like steps, messages can nest to support activation lines -->
		<message from="MeasureDefinitionConsumer" to="MeasureDefinitionSource">
			<name>Search Request</name>
			<description></description>
			<trigger id="MTRIGGER1">
				<name>A Query is Initiated by User/System</name>
			</trigger>
			<semantics>
				<description>The Measure Definition Consumer sends a query using an HTTP GET or POST transaction to the Measure Definition Source requesting information on available measures.</description>
				<interaction protocol='fhir'>
					<!-- Common parameter requirements -->
					<!-- Servers must support standard values for format, clients may use Accept header or _format -->
					<group id='formats'>
						<name>Formats</name>
						<description>All servers must support the _format parameter for any read or search and the standard values
defined by FHIR for JSON and XML output. This value must override the Accept: header when present in an exchange.
Servers must also support the Accept: header, and **shall** support any value in Accept: that can be given to _format
for consistency. Servers are also free to support other output formats (e.g. turtle as defined in the base FHIR
specifications, or other formats such as CSV which might be easier for clients to present or use). Servers
should support other commonly used expressions representing JSON or XML outputs without complaint, including
those specified in prior releases (e.g., the DSTU2 application/xml+fhir or application/json+fhir types that
have since changed in R4).</description>
						<parameter name='_format' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shall' />
						<!-- Servers **should** support all values for format, clients may use Accept header or _format -->
						<parameter name='_format' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should'
							client='should-not' />
						<parameter name='Accept:' min='0' max='1' values='application/fhir+xml application/fhir+json' expect='shall' />
						<parameter name='Accept:' min='0' max='1'
							values='xml json text/xml application/json application/xml application/xml+fhir application/json+fhir' expect='should'
							client='should-not' />
					</group>
					<group id='includes'>
						<name>Include Support</name>
						<description>To reduce transaction overhead, a client system may wish to retrieve all the resources referenced by the
							selected resource when obtaining it. This can be accomplished by using a search with an _id parameter, combined with
							_include=*.</description>
						<overview>This guide does not further specify specify resource includes beyond required support for *.
							Systems that support _include gernally handle _include=*, in fact, in some ways it is easier to implement
							than more selective _include operations. Recursive includes can be a source of server loading issues, as
							an incorrectly implemented include with recursive includes could wind up retrieving far more data than
							the client expected. Thus, these are not recommended.</overview>
						<parameter name='_include' min='0' max='1' values='*' type='string' expect='shall' />
						<parameter name='_include:iterate' type='string' expect='should-not' />
					</group>
					<group id='count'>
						<description>The server must support the _count parameter for queries. Servers **should** use a default
							value for _count if no value is provided to avoid server overloading. This guide recommends a default value of 100 based on
							existing implementation experience.</description>
						<parameter name='_count' min='0' max='1' expect='shall' />
					</group>
					<operation name='read' resources='Measure Library ValueSet CodeSystem ConceptMap' expect='shall'>
						<name>Read on Required Resources</name>
						<description>A client must be able to read individual Measure and Library resources that are returned by a query.</description>
					</operation>
					<operation name='search' resources='Measure Library ValueSet CodeSystem ConceptMap' expect='shall'
						client="should">
						<name>Search by _id on Measure and Library Resources</name>
						<group>
							<name>Search by _id</name>
							<description>A client must be able to read individual resources that are returned or referenced within resources
								returned by a query. Client systems may save resource references for future use, retrieving them later as
								needed. To reduce overhead, a client system may also wish to retrieve the resources referenced by the
								selected resource. This can be accomplished by using a search with an _id parameter, combined with _include=*</description>
							<parameter name='_id' min='1' max='*' type='token' expect='shall' />
						</group>
						<group>
							<name>Search by _url</name>
							<description>A client must be able to read individual resources that are returned or referenced within a measure
								by the canonical url that is used to identify them. Client systems may save resource references for future use,
								retrieving them later as needed.</description>
							<parameter name='url' min='1' max='*' type='uri' expect='shall' />
						</group>
					</operation>
					<operation id='search-for-measure-definition' name='search' resources='Measure' expect='shall' client="should">
						<name>Search on Measure Definition Resources</name>
						<description>Systems must be able to retrieve measures needed for automation.</description>
						<overview>Measures can be identified by codes used in the measure,
							or by the measure title, its canonical URL, or by something easier for a user to recall, such
							as the text of the measure or a code within it. Multiple measures may report on the same kind of thing (e.g., beds),
							so retrieval by code, or by code within a value set **should** be supported. There may be
							multiple measures which identify the kind of thing that the client system is interested in
							learning more about. Search by code **should** be met by implementing the &lt;a
							href='SearchParameter-SearchParameter-code.html'>SearchParameter-code&lt;/a>
							search parameter.

							However, search by code is not supported by default by many off-the-shelf systems,
							and so this is not a strict requirement for implementers. Also, chained searching
							is also not always readily available, and so search by measure title is also not a hard requirement.
							At the very least, a server must be able to search by measure, and a client must also to ensure
							the greatest interoperability between systems with differing capabilities.</overview>
						<group id='text-search'>
							<name>Search by Text or Code</name>
							<description>A client system **should** be able to search for Measure definitions. This requirement can be met through
								support of the
								&lt;a href='http://hl7.org/fhir/search.html#text'>_text or _content search parameters&lt;/a>, or by implementation
								of the &lt;a href='SearchParameter-SearchParameter-definition-text.html'>definition-text SearchParameter&lt;/a>.</description>
							<parameter name='_text' min='0' max='*' type='string' expect='should' />
							<parameter name='_content' min='0' max='*' type='string' expect='should' />
							<parameter name='definition-text' min='0' type='string' max='*' expect='should' />
							<parameter name='code' min='0' max='*' type='token' expect='should' />
							<parameter name='code:in' min='0' max='*' type='token' expect='should' />
						</group>
					</operation>
				</interaction>
			</semantics>

			<action by="MeasureDefinitionConsumer">
				<name>Search for Measure</name>
				<description>The Measure Definition Consumer performs a FHIR Search operation
					to retrieve the selected measures.</description>
			</action>
			<result>
				<name>Search Response</name>
				<description>The Measure Definition Source returns the requested results results.</description>
				<trigger id="MTRIGGER-1a">
					<name>Resources have been requested by a Measure Definition Consumer.</name>
				</trigger>
				<semantics>
					<description>The Measure Definition Source responds with requested resources.</description>
					<overview>The resources will conform to the profile for the
						Public Health Measure described elsewhere in this Implementation Guide</overview>
					<interaction protocol='fhir'>
						<description>The Measure Definition Source will return the selected resources and
							an appropriate success response in a FHIR resource following the protocol for the read or search operation requested.</description>
						<content profiles='PublicHealthMeasure' expect='shall' />
					</interaction>
				</semantics>
				<action by="MeasureDefinitionSource">
					<name>Returns Matching Measure Resources</name>
					<description>The Measure Definition Source returns the requested resource.</description>
				</action>
			</result>
		</message>
	</transaction>

	<transaction id="COMPUTE-MX" standards="FHIR-R4 RFC-7230 NDJSON">
		<name>Compute Measure</name>
		<description>The Compute Measure transaction describes the behavior of the Measure Computer actor in periodically computing
			and reporting on measures.</description>
		<overview>This transaction enables automatic computing of measure reports and manual retriggering of report generation for
			diagnostics or error recovery.</overview>
		<message from="MeasureComputer" to="MeasureComputer">
			<name>Compute Measure</name>
			<description>The Measure Computer computes the measure report for the current reporting period.</description>
			<trigger id="CTRIGGER1">
				<name>Reporting Period Elapsed</name>
				<description>The current reporting period has elapsed, or the operation is triggered by automation (e.g. for manual testing,
					diagnostics or error recovery).</description>
				<overview>See the [Reporting Period](StructureDefinition-ReportingPeriod.html) extension.</overview>
			</trigger>
			<semantics>
				<description>The Measure Computer prepares a Measure Report.</description>
				<interaction protocol="fhir">
					<operation name='$evaluate-measure' invoke='instance' resources="Measure" expect="shall" client='may'>
						<name>Evaluate the measure</name>
						<description>Create or update a MeasureReport for the given time period. If a report already exists for the subject and
							reporter for the given time period, it is updated.
							Otherwise, a new report is created.</description>
						<group>
							<name>Create or Update a MeasureReport Instance</name>
							<parameter name='periodStart' use='in' type='date' min="1" max="1">
								<description>The start of the measurement period.</description>
							</parameter>
							<parameter name='periodEnd' use='in' type='date' min="1" max="1">
								<description>The end of the measurement period.</description>
							</parameter>
							<parameter name='report' use='in' type='string' min="1" max="1" values='true false'>
								<description>If report is true, then the created measure report will be created or updated in the system.
									If report is false or omitted, the computed MeasureReport will simply be returned to the caller.</description>
							</parameter>
							<parameter name='return' use='out' type='MeasureReport' min='1' max='1'>
								<description>The computed MeasureReport</description>
							</parameter>
						</group>
					</operation>
				</interaction>
			</semantics>
			<action by='MeasureComputer'>
				<name>Compute Measure</name>
				<description>When the reporting period has elapsed, or the operation is externally triggered, a MeasureReport for the
specified Measure is computed from available data and the grouped MeasureSource is invoked below to store the created or
updated MeasureReport resource</description>
			</action>
		</message>
        <message from="MeasureComputer" to="DataSource">
            <name>Search FHIR Resources</name>
            <description></description>
            <trigger id="DataQuery">
                <name>Data Query</name>
                <description>Data is needed to compute a measure.</description>
            </trigger>
            <semantics>
	            <description>The Measure Computer sends a query using an HTTP GET or POST to a Data Source supporting the
	                [FHIR Search](https://www.hl7.org/fhir/search.html) capabilities using an appropriate national implementation guide.</description>
                <interaction protocol='fhir'>
                    <description>The Measure Computer will construct and send a query.</description>
                    <operation name='search' resources='Patient Encounter' expect='shall' client='shall'>
                        <name>Search for Patient</name>
                        <description>The Data Query operation supports retrieval of patients by resource id.</description>
                        <overview>Patient is one of the resources most commonly used to represent populations.
                            The requirements below represent the bare minimum expected parameters used for searching for this resource.</overview>
                        <group>
                            <parameter name='_id' comp='eq' min='1' max='1' type='reference' expect='shall' />
                        </group>
                    </operation>
                    <operation name='search' resources='Patient Encounter' expect='shall' client='shall'>
                        <name>Search for Encounter</name>
                        <description>The Data Query operation supports retrieval of patients by resource id.</description>
                        <overview>Encounter is one of the resources most commonly used to represent populations.</overview>
                        <group>
                            <parameter name='_id' comp='eq' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='date' comp='eq lt gt ge le' type='date' min='0' max='2' expect='shall' />
                            <parameter name='class' min='1' max='1' type='reference' expect='shall' />
                        </group>
                    </operation>
                    <operation name='search'
                        resources='AllergyIntolerance Condition DiagnosticReport Encounter MedicationRequest Observation Procedure ServiceRequest'
                        expect='shall' client='should'>
                        <name>Search for Basic Patient Clinical Data</name>
                        <description>The Data Query operation must support retrieval of basic clinical data for
                            patients by patient id, encounter or code.</description>
                        <overview>The requirements below represent the bare minimum expected parameters used for
                            searching for these resources.</overview>
                        <group>
                            <parameter name='_id' comp='eq' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='patient' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='encounter' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='code' min='1' max='1' type='token' expect='shall' />
                        </group>
                    </operation>
                    <operation name='search'
                        resources='DocumentReference FamilyMemberHistory MedicationAdministration MedicationDispense MedicationStatement'
                        expect='should' client='should'>
                        <name>Search for More Detailed Patient Clinical Data</name>
                        <description>The Data Query operation should support retrieval of more detailed clinical data by patient id, encounter or
                            code.</description>
                        <overview>The requirements below represent the bare minimum expected parameters used for
                            searching for these resources.</overview>
                        <group>
                            <parameter name='_id' comp='eq' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='patient' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='encounter' min='1' max='1' type='reference' expect='shall' />
                            <parameter name='code' min='1' max='1' type='token' expect='shall' />
                        </group>
                    </operation>
                </interaction>
            </semantics>
            <action by="MeasureConsumer">
                <name>Search for Data</name>
                <description>Measure Computer requests data from a Data Source.</description>
                <overview>The Measure Computer performs a FHIR Search operation
                    to retrieve the selected resources.</overview>
            </action>
            <result>
                <name>Search Response</name>
                <description>The Data Source returns the requested data.</description>
                <trigger id="DataQueryResponse">
                    <name>Resources have been requested by a Measure Computer.</name>
                </trigger>
                <semantics>
                    <description>The Data Source responds with requested resources.</description>
                    <overview>The resources will conform to the profiles specified in a national or regional Implementation Guide</overview>
                    <interaction protocol='fhir'>
                        <description>The Data Source will return the selected resources and
                            an appropriate success response in a FHIR resource following the protocol for the read or search operation requested.</description>
                    </interaction>
                </semantics>
                <action by="DataSource">
                    <name>Returns Matching Resources</name>
                    <description>The Data Source returns the requested resources.</description>
                </action>
            </result>
        </message>
		<message from="MeasureSource" to="MeasureConsumer" see="PUSH-TX">
			<name>Report Measure</name>
			<description>The Measure Computer reports the newly computed measure for the current reporting period.</description>
			<trigger id="CTRIGGER2">
				<name>MeasureReport Available</name>
				<description>A new MeasureReport resource is available for reporting.</description>
			</trigger>
			<semantics>
				<description>The Measure Computer reports the computed result via the grouped MeasureSource actor.</description>
			</semantics>
			<action by='MeasureSource'>
				<name>Send MeasureReport Resource</name>
				<description>The MeasureSource stores the MeasureReport by creating or updating it on the MeasureConsumer</description>
			</action>
			<action by='MeasureConsumer'>
				<name>Accept MeasureReport Resource</name>
				<description>The MeasureConsumer processes the MeasureReport given in the create/update interaction.</description>
			</action>
		</message>

		<message from="MeasureConsumer" to="MeasureSource" see="PULL-TX">
			<name>Query Measure</name>
			<description>The Measure Computer responds to a query for a Measure Report with the newly computed report for the current
				reporting period.</description>
			<trigger id="CTRIGGER3">
				<name>MeasureReport Requested</name>
				<description>The Measure Consumer has requested measure reports with criteria matching the newly created report.</description>
			</trigger>
			<semantics>
				<description>The Measure Computer reports the computed result via the grouped MeasureSource actor.</description>
			</semantics>
			<action by='MeasureSource'>
				<name>Store MeasureReport Resource</name>
				<description>The MeasureSource stores the MeasureReport and is prepared to respond to queries for the MeasureReport resource
					by the MeasureConsumer</description>
			</action>
			<action by='MeasureConsumer'>
				<name>Query for MeasureReport Resource</name>
				<description>The MeasureConsumer queries for the MeasureReport from the MeasureSource</description>
			</action>
		</message>
	</transaction>

	<transaction id="REPORT-TX" standards="RFC-7230">
		<name>Communicate Results</name>
		<description>The Communicate Results transaction allows users (e.g., Public Health Officials) to view current resource
			availability,
			or other systems to access resource availability data.</description>
		<message from="MeasureConsumer" to="MeasureConsumer">
			<name>Communicate Measure</name>
			<description>Upon completion of this transaction, resource availability data will have been communicated to a
				user or system. This can be demonstrated by generation of a report, summary, or other artifact, or by transmission of resource
				availability data or some computation over it to another system.</description>
			<overview>This requirement can be met by a Measure Consumer that consumes and displays data in a Web Browser, consumes data
				and transmits it in another format to a public health agency (e.g., using the CDC CSV format), or as a Measure
				Intermediary that consumes data from one system and communicates it to another, or transforms it and communicates it back
				to the original system or to another system.</overview>
		</message>
	</transaction>

	<content id="bed-location">
		<name>bed-location</name>
		<description>This content profile describes the structure of a Location Resource describing a reported upon Bed in a Bed
			Measure Report</description>
	</content>
	<content id="supporting-device">
		<name>Supporting Device</name>
		<description>This content profile describes the structure of a Device Resource describing a reported upon Device in Device
			Measure Report</description>
	</content>
	<content id="resource-location">
		<name>Resource Location</name>
		<description>This content profile describes the structure of a Location Resource describing the physical location (e.g.,
			building)
			where a bed or device is located</description>
	</content>
	<content id="audit-event-write">
		<name>Audit Event Write</name>
		<description>This content profile describes the structure of an AuditEvent Resource reporting a write on a resource.</description>
	</content>
	<content id="audit-event-read">
		<name>Audit Event Read</name>
		<description>This content profile describes the structure of an AuditEvent Resource reporting a read on a resource.</description>
	</content>
</profile>
